name: Build & Push Hello World to ECS-Lambda ECR

on:
  push:
    branches: [ "main", "master" ]
    paths:
      - "hello-ecr/**"
      - ".github/workflows/deploy-hello-ecr.yml"
  workflow_dispatch:

env:
  AWS_REGION: eu-west-1
  ECR_REGISTRY: 881490114584.dkr.ecr.eu-west-1.amazonaws.com
  ECR_REPOSITORY: ecs-lambda
  IMAGE_NAME: hello-world
  BUILD_CONTEXT: ./hello-ecr

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names "${{ env.ECR_REPOSITORY }}" >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name "${{ env.ECR_REPOSITORY }}"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image
        id: build
        env:
          IMAGE_TAG: hello-${{ github.run_number }}
          ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          BUILD_CONTEXT: ${{ env.BUILD_CONTEXT }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        run: |
          set -e
          echo "Building with context: $BUILD_CONTEXT"
          docker build -t "$IMAGE_NAME:$IMAGE_TAG" "$BUILD_CONTEXT"

          FULL_TAG="$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          LATEST_TAG="$ECR_REGISTRY/$ECR_REPOSITORY:latest"

          docker tag "$IMAGE_NAME:$IMAGE_TAG" "$FULL_TAG"
          docker tag "$IMAGE_NAME:$IMAGE_TAG" "$LATEST_TAG"

          docker push "$FULL_TAG"
          docker push "$LATEST_TAG"

          echo "full_image_uri=$FULL_TAG"   >> $GITHUB_OUTPUT
          echo "latest_image_uri=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Print image URIs
        run: |
          echo "Pushed:"
          echo " - ${{ steps.build.outputs.full_image_uri }}"
          echo " - ${{ steps.build.outputs.latest_image_uri }}"
